standard structure

package
  	pyproject.toml
  	license
  	readme.md
  	src
    	package
    	    utils.py
      		main.py
      		__i
    test
    	test.py

notes:
1: Python looks for packages in sys.paths whose first entry in the dir containing you script
2: Python interpreter does not search recursiely in sys.path. 
  use case: If you want to import utils.py in main
			you have to include path upto src dir in PythonPath otherwise interpeter won't be able to find it
3: Relative imports wont work when we run the script directly why?
   we we run a python script __name__ == __main__ means the entry point of app

   when we import a python module => example: name for utils => src.package.utils
   but if we run utils.py directly name becomes __main__ thats why relative import won't work

   so how to make relative import work when we run utils.py directly
   run using this command  cd src and run python3 -m package.utils

* structure for pyproject.toml file
		[build-system]
		requires = ["poetry-core>=1.0.0"]
		build-backend = "poetry.core.masonry.api"

		[tool.poetry]
		name = "package"
		version = "1.0.0"
		authors = ["Shubham Dogra <shubham@gmail.com>"]
		description = "A small example package"
		readme = "README.md"
		requires-python = ">=3.7"
		classifiers = [
		    "Programming Language :: Python :: 3",
		    "License :: OSI Approved :: MIT License",
		    "Operating System :: OS Independent",
		]


		[tool.poetry.dependencies]
		PyYAML = "^6.0"
		boto3 = "^1.26.135"
		requests = "^2.30.0"


		[tool.poetry.scripts]
		package = "package.main:run_cli"

		[tool.poetry.urls]
		"Homepage" = "https://github.com/pypa/sampleproject"
		"Bug Tracker" = "https://github.com/pypa/sampleproject/issues"

make sure name in this file in equal to name of package inside src



